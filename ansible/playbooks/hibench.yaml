---
- name: Prepare HiBench benchmark jobs
  hosts: leader
  vars_files:
    - ../vars.yaml
    - ../benchmark-definition.yaml
  vars:
    leader_hostname: "{{ hostvars['leaderNode']['ansible_hostname'] }}"
  become: true
  become_user: "{{ linux_username }}"
  tasks:
    - name: Template Hadoop config
      template:
        src: "{{ hibench_template_dir }}/hadoop.conf"
        dest: "{{ hibench_dir }}/conf/hadoop.conf"

    - name: Template HiBench config
      vars:
        parallelism: "{{ groups['follower'] | length }}"
      template:
        src: "{{ hibench_template_dir }}/hibench.conf"
        dest: "{{ remote_template_dir }}/hibench.conf"

    - name: Replace default hibench.conf
      copy:
        src: "{{ remote_template_dir }}/hibench.conf"
        dest: "{{ hibench_dir }}/conf/hibench.conf"
        remote_src: yes

    - name: Template Spark config
      template:
        src: "{{ hibench_template_dir }}/spark.conf"
        dest: "{{ hibench_dir }}/conf/spark.conf"

    - name: Run prepare script
      become_user: "{{ linux_username }}"
      command: bash "{{ hibench_dir }}/bin/workloads/{{ item.category }}/{{ item.name }}/prepare/prepare.sh"
      loop: "{{ workloads }}"
      when: item.enabled

    - name: Upload jars
      command: "{{ hadoop_dir }}/bin/hdfs dfs -put -f {{ hibench_dir }}/{{ item.value.dir }}/{{ item.value.file }} {{ hdfs_user_dir }}"
      loop: "{{ jars | dict2items }}"

    - name: Prepare templater dict
      vars:
        lister_jar_full_path: "{{ hdfs_address }}{{ hdfs_user_dir }}/{{ listener_jar }}"
      copy:
        dest: "{{ hibench_dir }}/bin/workloads/{{ item.category }}/{{ item.name }}/values.yaml"
        content: |
          name: {{ item.name }}
          spark_version: {{ spark_version }}
          hibench_jar: {{ hdfs_address }}{{ hdfs_user_dir }}/{{ lookup('vars', 'jars')[item.category]['file'] }}
          listener_jar: {{ lister_jar_full_path }}
      loop: "{{ workloads }}"
      when: item.enabled

    - name: Run templater
      command:
        cmd: >
          bash generate_templates.sh
            "{{ hibench_dir }}/bin/workloads/{{ item.category }}/{{ item.name }}/spark/run-command.sh"
            "{{ hibench_dir }}/bin/workloads/{{ item.category }}/{{ item.name }}/values.yaml"
            "{{ hibench_dir }}/hibench-spark-app.yaml"
        chdir: "{{ hibench_dir }}"
      loop: "{{ workloads }}"
      when: item.enabled
