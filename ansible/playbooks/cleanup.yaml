---
- name: Revert deployments
  hosts: leader
  vars_files:
    - ../vars.yaml
  vars:
    ansible_python_interpreter: "{{ venv_path }}/bin/python3"
  become: yes
  ignore_errors: true
  tasks:
    - name: Remove Zookeeper chart
      kubernetes.core.k8s:
        name: zookeeper
        api_version: zookeeper.stackable.tech/v1alpha1
        kind: ZookeeperCluster
        namespace: "{{ k8s_namespace }}"
        state: absent
        wait: true

    - name: Remove Zookeeper ZNode chart
      kubernetes.core.k8s:
        name: hdfs-znode
        api_version: zookeeper.stackable.tech/v1alpha1
        kind: ZookeeperZnode
        namespace: "{{ k8s_namespace }}"
        state: absent
        wait: true

    - name: Remove HDFS chart
      kubernetes.core.k8s:
        name: "{{ hdfs_cluster_name }}"
        api_version: hdfs.stackable.tech/v1alpha1
        kind: HdfsCluster
        namespace: "{{ k8s_namespace }}"
        state: absent
        wait: true

    - name: Remove spark-operator helm chart
      kubernetes.core.helm:
        name: spark-operator
        release_namespace: "{{ k8s_namespace }}"
        state: absent
        wait: true

    - name: Remove spark-operator repository
      kubernetes.core.helm_repository:
        name: spark-operator
        state: absent

    - name: Remove mongodb helm chart
      kubernetes.core.helm:
        name: mongodb
        release_namespace: "{{ k8s_namespace }}"
        state: absent
        wait: true

    - name: Remove Zookeeper operator helm chart
      kubernetes.core.helm:
        name: zookeeper-operator
        release_namespace: "{{ k8s_namespace }}"
        state: absent
        wait: true

    - name: Remove HDFS operator helm chart
      kubernetes.core.helm:
        name: hdfs-operator
        release_namespace: "{{ k8s_namespace }}"
        state: absent
        wait: true

    - name: Remove Commons operator helm chart
      kubernetes.core.helm:
        name: commons-operator
        release_namespace: "{{ k8s_namespace }}"
        state: absent
        wait: true

    - name: Remove Secret operator helm chart
      kubernetes.core.helm:
        name: secret-operator
        release_namespace: "{{ k8s_namespace }}"
        state: absent
        wait: true

    - name: Remove Listener operator helm chart
      kubernetes.core.helm:
        name: listener-operator
        release_namespace: "{{ k8s_namespace }}"
        state: absent
        wait: true

    - name: Remove stackable-stable repository
      kubernetes.core.helm_repository:
        name: stackable-stable
        state: absent

- name: Remove bind-mount directories for PersistentVolumes on all nodes
  hosts: remote
  become: yes
  vars_files:
    - ../vars.yaml
  tasks:
    - name: Unmount mongodb directories
      ansible.posix.mount:
        path: "/mnt/disks/mongodb-data-{{ ansible_hostname | lower }}"
        state: unmounted
      loop: "{{ range(1, replica_count + 1) }}"

    - name: Unmount zookeeper directories
      ansible.posix.mount:
        path: "/mnt/disks/zookeeper-data-{{ ansible_hostname | lower }}"
        state: unmounted

    - name: Unmount hdfs directories
      ansible.posix.mount:
        path: "/mnt/disks/hdfs-data-{{ ansible_hostname | lower }}-{{ item }}"
        state: unmounted
      loop: "{{ range(1, data_node_replicas + name_node_replicas + journal_node_replicas + 1) }}"

    - name: Remove mongodb data source directory
      file:
        path: "/mnt/disks/mongodb-data-{{ ansible_hostname | lower }}"
        state: absent
      loop: "{{ range(1, replica_count + 1) }}"

    - name: Remove Zookeeper data source directory
      file:
        path: "/mnt/disks/zookeeper-data-{{ ansible_hostname | lower }}"
        state: absent

    - name: Remove HDFS data source directory
      file:
        path: "/mnt/disks/hdfs-data-{{ ansible_hostname | lower }}-{{ item }}"
        state: absent
      loop: "{{ range(1, data_node_replicas + name_node_replicas + journal_node_replicas + 1) }}"

    - name: Remove mongodb data target directory
      file:
        path: "/Users/{{ linux_username }}/mongodb-data-{{ ansible_hostname | lower }}"
        state: absent
      loop: "{{ range(1, replica_count + 1) }}"

    - name: Remove Zookeeper data target directory
      file:
        path: "/Users/{{ linux_username }}/zookeeper-data-{{ ansible_hostname | lower }}"
        state: absent

    - name: Remove HDFS data target directory
      file:
        path: "/Users/{{ linux_username }}/hdfs-data-{{ ansible_hostname | lower }}-{{ item }}"
        state: absent
      loop: "{{ range(1, data_node_replicas + name_node_replicas + journal_node_replicas + 1) }}"

- name: Delete all PVCs in a namespace
  hosts: leader
  vars_files:
    - ../vars.yaml
  vars:
    ansible_python_interpreter: "{{ venv_path }}/bin/python3"
  become: yes
  tasks:
    - name: Retrieve all PVCs in the namespace
      kubernetes.core.k8s_info:
        api_version: v1
        kind: PersistentVolumeClaim
        namespace: "{{ k8s_namespace }}"
      register: pvc_info

    - name: Extract PVC names
      set_fact:
        pvc_names: "{{ pvc_info.resources | map(attribute='metadata.name') | list }}"

    - name: Delete PVCs
      kubernetes.core.k8s:
        kind: PersistentVolumeClaim
        name: "{{ item }}"
        namespace: "{{ k8s_namespace }}"
        state: absent
      loop: "{{ pvc_names }}"
      when: pvc_names | length > 0

- name: Delete all PVs in the namespace
  hosts: leader
  vars_files:
    - ../vars.yaml
  vars:
    ansible_python_interpreter: "{{ venv_path }}/bin/python3"
  become: yes
  tasks:
    - name: Retrieve all PVs in the namespace
      kubernetes.core.k8s_info:
        api_version: v1
        kind: PersistentVolume
        namespace: "{{ k8s_namespace }}"
      register: pv_info

    - name: Extract PV names
      set_fact:
        pv_names: "{{ pv_info.resources | map(attribute='metadata.name') | list }}"

    - name: Delete PVs
      kubernetes.core.k8s:
        kind: PersistentVolume
        state: absent
        name: "{{ item }}"
        namespace: "{{ k8s_namespace }}"
      loop: "{{ pv_names }}"
      when: pv_names | length > 0

- name: Remove users dir
  hosts: leader
  vars_files:
    - ../vars.yaml
  become: true
  tasks:
    - name: Remove users dir
      file:
        path: /Users/{{ linux_username }}
        state: absent

- name: Revert user creation
  hosts: remote
  vars_files:
    - ../vars.yaml
  become: true
  become_user: root
  tasks:
    - name: Remove new user from sudo group
      user:
        name: "{{ linux_username }}"
        groups: sudo
        append: no
        state: present

    - name: Remove passwordless sudo for the new user
      lineinfile:
        path: /etc/sudoers
        state: absent
        regexp: "^%{{ linux_username }}"

    - name: Delete the user
      user:
        name: "{{ linux_username }}"
        state: absent
        remove: yes
